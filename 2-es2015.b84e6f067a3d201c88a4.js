(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"/ynw":function(e,t,i){"use strict";i.d(t,"a",(function(){return d}));var a=i("8Y7J"),l=(i("KdfD"),i("/gN3")),r=i("B82O"),n=i("eeq/"),o=i("k48M"),s=i("9won");class d{constructor(e,t,i,l,r,n){this.formatter=e,this.agGridPdf=t,this.agGridSortingComparators=i,this.detectIe=l,this.excelExport=r,this.localText=void 0,this.pagination=!1,this.pageSize=1e3,this.canCellClick=(e,t)=>e&&e.hasDrill&&t.hasDrill,this.modelChange=new a.EventEmitter(!0),this.cellClick=new a.EventEmitter,this.cellValueChanged=new a.EventEmitter,this.onTrackChanges=new a.EventEmitter,this.filterChanged=new a.EventEmitter,this.dataLoading=!1,this.exportLoading=!1,this.isResizeAllColumns=!0,this.subs=[],this.afterViewInitEvents=[],this.debug=n.factory(new.target.name)}set loading(e){this.dataLoading=e,this.refreshLoader()}set sub(e){this.subs.push(e)}set onAfterViewInit(e){this.afterViewInitEvents instanceof Array?this.afterViewInitEvents.push(e):e.call(this)}ngOnChanges(e){this.debug.log("Hook: DataChanges:",e);const t=e.columns&&this.columns instanceof Array,i=e.data&&this.data instanceof Array;t&&this.prepareColumns(),i&&this.prepareData(),(i||t)&&setTimeout(()=>{this.fitTable(),this.onAfterViewInit=()=>{this.columnDefs&&this.columnDefs.length&&this.rowData&&this.rowData.length&&(this.grid.api.getModel().isEmpty()||(this.grid.api.ensureIndexVisible(0),this.grid.api.ensureColumnVisible(this.columnDefs[0].field)))}}),e.customGridOptions&&this.customGridOptions&&this.refreshGridOptions()}ngOnInit(){this.setLocalText(),this.refreshGridOptions(),this.sub=this.agGridPdf.loading$.subscribe(e=>{this.exportLoading=e,this.refreshLoader()})}ngAfterViewInit(){this.debug.log("Executing AfterViewInitEvents:",this.afterViewInitEvents),this.afterViewInitEvents.forEach(e=>e.call(this)),this.afterViewInitEvents=null}ngOnDestroy(){this.subs.forEach(e=>e.unsubscribe())}exportDataAsXls(e,t,i={},a="other"){e=e.replace(".","_"),this.excelExport.exportAgGrid(this.grid,e,t,null,null,i,a)}exportDataAsPdf(e,t=[],i,a={fixed:"sn"}){this.agGridPdf.generate(this.grid,e,t,null,a,i)}filterByRange(e,t,i){const a=this.grid&&this.grid.api;if(!a)return;a.isAnyFilterPresent()&&(a.setFilterModel(null),a.onFilterChanged());let l=a.getFilterInstance(e);l||(l=a.getFilterInstance(e+"_1"));const r=l.getFrameworkComponentInstance();r&&(null!=t&&void 0!==i&&null!==t?(r.setFilterType("inRange"),r.setFilterTo(i)):r.setFilterType("greaterThan"),r.setFilter(t),a.onFilterChanged())}filterByText(e,t){const i=this.grid&&this.grid.api;if(!i)return;const a=i.getFilterInstance(e),l=this.grid.columnApi.getColumn(e).getColDef();a&&(i.isAnyFilterPresent()&&(i.setFilterModel(null),i.onFilterChanged()),a.setModel("agSetColumnFilter"===l.filter?[t]:{type:"equals",filter:t}),i.onFilterChanged())}getCount(){return this.grid.api&&this.grid.api.getDisplayedRowCount()}refreshGridOptions(){this.gridOptions={defaultColDef:{filter:!0,sortable:!0,resizable:!0},localeText:this.localText,suppressMultiSort:!1,animateRows:!0,enableCellChangeFlash:!0,rowBuffer:this.detectIe.isEdge?100:20,suppressContextMenu:!0,sideBar:!1,getMainMenuItems:e=>{const t=[],i=["toolPanel"];return e.defaultItems.forEach(e=>{i.indexOf(e)<0&&t.push(e)}),t},onColumnResized:e=>{this.isResizeAllColumns&&"columnResized"===e.type&&"autosizeColumns"===e.source&&!0===e.finished&&(this.grid&&s.a.fitToAutoSizeColumns(this.columnDefs,this.grid),this.isResizeAllColumns=!1)},excelStyles:this.excelStyles?this.excelStyles:[{id:"header",borders:{borderBottom:{color:"#000000",lineStyle:"Continuous",weight:1},borderLeft:{color:"#000000",lineStyle:"Continuous",weight:1},borderRight:{color:"#000000",lineStyle:"Continuous",weight:1},borderTop:{color:"#000000",lineStyle:"Continuous",weight:1}},font:{bold:!0}},{id:"defaultExcelStyle",borders:{borderBottom:{color:"#000000",lineStyle:"Continuous",weight:1},borderLeft:{color:"#000000",lineStyle:"Continuous",weight:1},borderRight:{color:"#000000",lineStyle:"Continuous",weight:1},borderTop:{color:"#000000",lineStyle:"Continuous",weight:1}}}],pinnedTopRowData:[],overlayLoadingTemplate:'<div class="progress progress--indeterminate">\n        <div class="progress--indeterminate__inner">\n            <div class="progress--indeterminate__left-half">\n                <div class="progress--circle progress--indeterminate__circle--left"></div>\n            </div>\n            <div class="progress--indeterminate__right-half">\n                <div class="progress--circle progress--indeterminate__circle--right"></div>\n            </div>\n        </div>\n        </div>',onRowDataChanged:()=>{this.rowData&&this.rowData.length&&this.grid.api.hideOverlay()},onFilterChanged:e=>{this.onTrackChanges.emit(e),this.filterChanged.emit(e)},onColumnVisible:e=>{e.column&&(e.column.isMoving()?this.draggedColId=e.column.getColId():this.onTrackChanges.emit(e))},onDragStopped:e=>{this.draggedColId&&!this.grid.columnApi.getColumn(this.draggedColId).isVisible()&&this.onTrackChanges.emit(e),this.draggedColId=null},onModelUpdated:()=>{this.onAfterViewInit=()=>{this.modelChange.emit(this.grid.api.getModel())}},onCellClicked:e=>{const{data:t,colDef:i}=e,a=this.columns.find(e=>e.field===i.field);this.debug.log("Cell Click. Event: %O. Row: %O. Col: %O",e,t,a),t&&a&&this.canCellClick(t,a)&&this.cellClick.emit({row:t,column:a,value:e.value,rowIndex:e.rowIndex,event:e.event})},onCellValueChanged:e=>{""!==e.newValue&&String(e.newValue)!==String(e.oldValue)&&this.cellValueChanged.emit(e)},onGridSizeChanged:e=>this.fitTable(),onGridReady:e=>{this.fitTable(),this.refreshLoader()},onDisplayedColumnsChanged:e=>this.fitTable()},this.customGridOptions&&Object.assign(this.gridOptions,this.customGridOptions)}prepareData(){this.rowData=this.data||[],this.setTotals()}prepareColumns(){const e=t=>Object.assign({headerName:t.name,field:t.field,width:t.width,minWidth:t.minWidth,pinned:t.pinned,tooltipField:t.tooltipField,enableRowGroup:!0,enableValue:!0,editable:t.editable,hide:t.hide,children:t.children instanceof Array?t.children.map(e):void 0,headerComponentFramework:r.a,headerComponentParams:{align:t.align},valueGetter:t.valueGetter,valueSetter:t.valueSetter,valueParser:t.valueParser,cellRenderer:t.cellRenderer,cellRendererFramework:t.cellRendererFramework,cellRendererParams:t.cellRendererParams,cellEditor:t.cellEditor,cellEditorParams:t.cellEditorParams,cellClass:t.cellClass,headerClass:t.headerClass},this.mapValueFormatter(t),this.mapFilterValueGetter(t),this.mapFilter(t.filter),this.mapSortingComparator(t),this.mapCellStyle(t));this.columnDefs=this.columns.map(t=>{const i=e(t);return this.mapExcelClassRules(i),i})}mapValueFormatter(e){if(e.valueFormatter instanceof Function)return{valueFormatter:e.valueFormatter};let t;const i=this.formatter,a=t=>{const i=t.data&&t.data[e.field];return null!=i?i:t.value},r={[l.d.Moment]:({data:t})=>t&&i.moment(t[e.field],e.momentFormat,e.momentIsUtc),[l.d.Date]:({data:t})=>t&&i.date(t[e.field]),[l.d.Money]:e=>i.money(a(e)),[l.d.Money2]:e=>i.money(a(e),{fractional:2}),[l.d.MoneyAbbr]:e=>i.abbrMoney(a(e),{K:1,M:1}),[l.d.Percentage]:e=>i.percentage(a(e)),[l.d.Percentage1DecWithZeroMantissa]:({data:t})=>t&&i.percentage(t[e.field],1,!1),[l.d.Integer]:e=>i.number(a(e),{fractional:0}),[l.d.Float]:({data:t})=>t&&i.number(t[e.field],{noZeroMantissa:!0}),[l.d.FloatWithTwoDecimalPlaces]:({data:t})=>t&&i.number(t[e.field],{fractional:2}),[l.d.FloatWithOneDecimalPlace]:({data:t})=>t&&i.number(t[e.field],{fractional:1}),[l.d.Custom]:({data:t})=>t&&e.customFormatter instanceof Function&&e.customFormatter(t[e.field],t,e),[l.d.Default]:({data:t})=>t&&t[e.field]};return t=r[e.labelFormat]||r[l.d.Default],{valueFormatter:t}}mapFilterValueGetter(e){const t=this.formatter;let i;const a=(e,t=0)=>{if(n.a.isEmpty(e))return e;const i=+String(e).replace(/[\s,$]/g,"");return isNaN(i)?e:+i.toFixed(t)},r=e=>n.a.isEmpty(e)||isNaN(+e)?e:+(100*+e).toFixed(),o={[l.d.Moment]:({data:i})=>i&&t.moment(i[e.field],e.momentFormat,e.momentIsUtc),[l.d.Date]:({data:i})=>i&&t.date(i[e.field]),[l.d.Money]:({data:t})=>t&&a(t[e.field]),[l.d.Percentage]:({data:t})=>t&&r(t[e.field]),[l.d.Percentage1DecWithZeroMantissa]:({data:t})=>t&&r(t[e.field]),[l.d.Integer]:({data:t})=>t&&a(t[e.field]),[l.d.Float]:({data:t})=>t&&a(t[e.field],2),[l.d.Default]:({data:t})=>t&&t[e.field]};return i=o[e.labelFormat]||o[l.d.Default],{filterValueGetter:i}}mapFilter(e){return{filter:{[l.c.String]:"agTextColumnFilter",[l.c.MultiChoice]:"agSetColumnFilter"}[e],filterParams:{[l.c.NumberRange]:{},[l.c.DateRange]:{comparator:(e,t)=>{const[i,a,l]=t.split("-"),r=+new Date(+l,+a-1,+i);return r<e?-1:r>e?1:0},newRowsAction:"keep"},[l.c.String]:{},[l.c.MultiChoice]:{}}[e],filterFramework:{[l.c.NumberRange]:o.d,[l.c.DateRange]:o.c}[e]}}mapSortingComparator(e){const t=this.agGridSortingComparators,i={[l.d.Money]:t.formattedMoney.bind(t),[l.d.Integer]:t.formattedMoney.bind(t),[l.d.Float]:t.formattedMoney.bind(t),[l.d.Percentage]:t.formattedPercentage.bind(t),[l.d.Percentage1DecWithZeroMantissa]:t.formattedPercentage.bind(t)},a={[l.c.NumberRange]:t.formattedMoney.bind(t)};return{comparator:i[e.labelFormat]||a[e.filter]||e.comparator}}mapCellStyle(e){const t={[l.b.Center]:"center",[l.b.Left]:"left",[l.b.Right]:"right"}[e.align]||"left",i={"text-align":t};return{cellStyle:e=>{const t=e.data;let a={};return t&&t.bold&&(a={"font-weight":"bold"}),Object.assign({},i,a)},cellClass:e.cellClass?e.cellClass:[`ag-body-cell-align-${t}`],cellClassRules:{"has-drill-down":({data:t})=>t&&this.canCellClick(t,e),"editable-cell":()=>e.editable}}}mapExcelClassRules(e){e.children?e.children.forEach(e=>this.mapExcelClassRules(e)):e.cellClassRules?Object.assign(e.cellClassRules,{defaultExcelStyle:()=>this.excelExport.isLoading()}):e.cellClassRules={}}fitTable(){if(this.debug.log("fitTable() fitting table"),this.grid&&this.grid.api)try{this.autoSizeColumns()}catch(e){console.warn("BaseAgGridTableComponent#fitTable: can not use custom algorithm to calculate columns width. Default algorithm use. Exception: ",e)}}autoSizeColumns(){const e=this.grid.columnApi.getAllColumns();if(!e)return;const t=this.getAdaptedColumnWidths(),i=this.gridElRef.nativeElement.getBoundingClientRect().width,a=t.reduce((t,i,a)=>e[a].isVisible()?t+i:t,0);if(this.debug.log("autoSizeColumns() realWidth: %i, proposedWidth: %i",i,a),a<i)return this.debug.log("autoSizeColumns() proposed widths is too less. Default auto size algorithm used"),void this.grid.api.sizeColumnsToFit();e.forEach((e,i)=>this.grid.columnApi.setColumnWidth(e,t[i],t.length===i-1))}getAdaptedColumnWidths(){const e=this.grid.columnApi.columnController.autoWidthCalculator,t=this.grid.api.gridPanel,i=this.grid.columnApi.getAllColumns().map(t=>e.getPreferredWidthForColumn(t)).map(e=>e>0?e:150),a=i.reduce((e,t)=>e+t,0),l=t.eBodyViewport.clientWidth;if(a>=l)return i;const r=l/a,n=i.map(e=>Math.floor(e*r));let o=l-n.reduce((e,t)=>e+t,0);return o<=0?n:n.map(e=>o-- >0?e+1:e)}refreshLoader(){this.grid&&this.grid.api&&(this.dataLoading||this.exportLoading?this.grid.api.showLoadingOverlay():this.grid.api.hideOverlay())}setTotals(){if(this.pinnedBottomRowData)return;const e=[];if(this.summaryFields&&this.summaryFields.length&&this.columns.length&&this.rowData.length){const t=e=>{if(-1!==this.summaryFields.indexOf(e.field)&&this.rowData.find(t=>t[e.field]||0===t[e.field])){const t=this.rowData.reduce((t,i)=>+i[e.field]+t,0);return isNaN(t)?null:e.hasDefaultFormat?t.toFixed(2):t}return null},i=this.columns.reduce((e,i,a)=>Object.assign(e,{[i.field]:0===a?this.summaryLabel||"Totals":t(i)}),{});e.push(i)}this.grid&&this.grid.api&&this.grid.api.setPinnedBottomRowData(e)}setLocalText(){this.isFrenchLang&&(this.localText={page:"page",more:"plus",to:"\xe0",of:"sur",next:"suivant",last:"Dernier",first:"premier",previous:"pr\xe9c\xe9dent",loadingOoo:"chargement...",selectAll:"tout s\xe9lectionner",searchOoo:"chercher...",blanks:"blancs",filterOoo:"filtre...",equals:"\xe9quivaut \xe0",notEqual:"in\xe9gal",dateFormatOoo:"Yyyy-mm-dd",lessThan:"moins que",greaterThan:"plus grand que",lessThanOrEqual:"inf\xe9rieur ou \xe9gal",greaterThanOrEqual:"Meilleur que ou \xe9gal",inRange:"daInRange",inRangeStart:"daTo",inRangeEnd:"daFrom",contains:"daContains",notContains:"daNotContains",startsWith:"daStarts dawith",endsWith:"daEnds dawith",andCondition:"daAND",orCondition:"daOR",applyFilter:"daApply",resetFilter:"daReset",clearFilter:"daClear",group:"groupe",columns:"Colonnes",filters:"filtres",rowGroupColumns:"laPivot Cols",rowGroupColumnsEmptyMessage:"la drag cols to group",valueColumns:"laValue Cols",pivotMode:"laPivot-Mode",groups:"laGroups",values:"laValues",pivots:"laPivots",valueColumnsEmptyMessage:"la drag cols to aggregate",pivotColumnsEmptyMessage:"la drag here to pivot",toolPanelButton:"la tool panel",noRowsToShow:"Aucune ligne \xe0 afficher",enabled:"activ\xe9",pinColumn:"laPin Column",valueAggregation:"laValue Agg",autosizeThiscolumn:"laAutosize Diz",autosizeAllColumns:"laAutsoie em All",groupBy:"par groupe",ungroupBy:"dissocier par",resetColumns:"R\xe9initialiser les colonnes",expandAll:"D\xe9velopper tout",collapseAll:"R\xe9duire tout",toolPanel:"laTool Panelo",export:"exporter",csvExport:"CSV exporter",excelExport:"Excel exporter (.xlsx)",excelXmlExport:"Excel exporter (.xml)",pivotChartAndPivotMode:"laPivot Chart & Pivot Mode",pivotChart:"laPivot Chart",chartRange:"laChart Range",columnChart:"colonne",groupedColumn:"group column",stackedColumn:"laStacked",normalizedColumn:"la100% Stacked",barChart:"laBar",groupedBar:"laGrouped",stackedBar:"laStacked",normalizedBar:"la100% Stacked",pieChart:"laPie",pie:"laPie",doughnut:"laDoughnut",line:"laLine",xyChart:"laX Y (Scatter)",scatter:"laScatter",bubble:"laBubble",areaChart:"laArea",area:"laArea",stackedArea:"laStacked",normalizedArea:"la100% Stacked",histogramChart:"laHistogram",pinLeft:"laPin <<",pinRight:"laPin >>",noPin:"laDontPin <>",sum:"somme",min:"laMin",max:"laMax",none:"laNone",count:"laCount",avg:"laAverage",filteredRows:"laFiltered",selectedRows:"laSelected",totalRows:"laTotal Rows",totalAndFilteredRows:"laRows",copy:"laCopy",copyWithHeaders:"laCopy With Headers",ctrlC:"laCtrl n C",paste:"laPaste",ctrlV:"laCtrl n V"})}}},"9won":function(e,t,i){"use strict";i.d(t,"a",(function(){return a}));class a{static fitToAutoSizeColumns(e,t){const i=[];e.forEach(e=>{i.push(e.field)}),t.columnApi.autoSizeColumns(i)}}},KdfD:function(e,t,i){"use strict";function a(e){for(var i in e)t.hasOwnProperty(i)||(t[i]=e[i])}Object.defineProperty(t,"__esModule",{value:!0}),a(i("SXLW")),a(i("L5g3")),a(i("jIY6")),a(i("hNGQ")),a(i("+dxm"))},k48M:function(e,t,i){"use strict";var a=i("jpiJ"),l=i("Glsh"),r=i("3kdw"),n=i("HAZr");i.d(t,"b",(function(){return a.a})),i.d(t,"a",(function(){return l.a})),i.d(t,"d",(function(){return r.a})),i.d(t,"c",(function(){return n.a}))},oveR:function(e,t,i){"use strict";i.d(t,"a",(function(){return l})),i.d(t,"b",(function(){return r}));var a=i("8Y7J"),l=(i("hNGQ"),i("+dxm"),i("jIY6"),a["\u0275crt"]({encapsulation:2,styles:[],data:{}}));function r(e){return a["\u0275vid"](0,[],null,null)}}}]);